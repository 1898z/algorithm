#include<cstdio>
#include<vector>
using namespace std;
const int maxn = 510;
struct Node{
	int v,dis;
}; 
vector<Node> adj[maxn]
int n;
int d[maxn];

bool Bellman(int s){ //start 源点 
	fill(d,d+maxn,INF);
	d[s] = 0;
	for(int i=0;i<n-1;i++){  //执行n-1轮
		for(int u=0;u<n;u++){  //每次都要遍历所有的边 
			for(int j=0;j<adj[u].size();j++){
				int v = adj[u][j].v;   //邻接表的顶点
				int dis = adj[u][j].dis; //邻接表的边权
				if(d[u]+dis<d[v])d[v] = d[u] + dis; 
			}
		} 
	}
}
int main(){
	return 0;
} 
